	[ generic-rules
		[ no-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-absolute-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-local-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-spaced-repetition-rule
			[
				[ candidates
					[ 1 3 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-modulo-x-repetition-rule
			[
				[ modulo 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ modulo-x-repetition-rule
			[
				[ modulo 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-modulo-x-local-repetition-rule
			[
				[ modulo 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-rpt-elmts-in-lists-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-consecutive-number-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-consecutive-ascending-rule
			[
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-consecutive-descending-rule
			[
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-consecutive-equal-rule
			[
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-repeated-element-sub-group-rule
			[
				[ sub-group-length 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-repeated-list-sub-group-rule
			[
				[ sub-group-length 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ item-sub-group-member-rule
			[
				[ sub-group-length 5 ]
				[ item-index 1 ]
				[ allowed
					[ 1 7 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-chain-rule
			[
				[ element 2 ]
				[ following
					[ 5 7 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-chain-rule
			[
				[ element 2 ]
				[ following
					[ 5 7 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ length-sub-group-rule
			[
				[ lengths
					[ 2 6 4 3 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-consecutive-equal-length-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-length-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-rule
			[
				[ index i1 ]
				[ value 7 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-index-rule
			[
				[ index i1 ]
				[ value 7 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-higher-rule
			[
				[ index i1 ]
				[ value 7 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-lower-rule
			[
				[ index i1 ]
				[ value 7 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-length-rule
			[
				[ index i1 ]
				[ length 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-nth-rule
			[
				[ index i1 ]
				[ nth? 0 ]
				[ what? 1 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-applied-sum-rule
			[
				[ index i1 ]
				[ sum 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ member-rule
			[
				[ list
					[ 1 2 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-member-rule
			[
				[ list
					[ 1 2 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-higher-than-rule
			[
				[ limit 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-lower-than-rule
			[
				[ limit 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-common-elements-rule
			[
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-any-element-rule
			[
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-this-element-rule
			[
				[ element 10 ]
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ interval-rules
		[ no-interval-local-repetition-rule
			[
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-interval-repetition-rule
			[
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-locally-repeated-given-interval-rule
			[
				[ interval 3 ]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-intervals-rule
			[
				[ intervals
					[ -1 2 -3 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-intervals-rule
			[
				[ intervals
					[ -1 2 -3 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-distant-intervals-rule
			[
				[ candidates
					[ 1 3 ]
				]
				[ intervals
					[ 1 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-consecutive-equal-intervals-rule
			[
				[ how-many 3 ]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ obliged-interval-chain-rule
			[
				[ interval 3 ]
				[ int-list
					[ 1 2 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-obliged-interval-chain-rule
			[
				[ interval 3 ]
				[ int-list
					[ 1 2 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ repeat-interval-rule
			[
				[ interval 3 ]
				[ which3 1 ]
				[ times 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ repeat-resulting-interval-rule
			[
				[ resulting-interval 3 ]
				[ which3 1 ]
				[ times 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-interval-rule
			[
				[ index 2 ]
				[ allowed
					[ 2 4 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-index-interval-rule
			[
				[ index 2 ]
				[ allowed
					[ 2 4 ]
				]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-higher-interval-rule
			[
				[ limit 6 ]
				[ sign? :+ ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-bigger-interval-rule
			[
				[ limit 6 ]
				[ sign? :+ ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-lower-interval-rule
			[
				[ limit 6 ]
				[ sign? :+ ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-smaller-interval-rule
			[
				[ limit 6 ]
				[ sign? :+ ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ resulting-interval-rule
			[
				[ interval 6 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-resulting-interval-rule
			[
				[ interval 6 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ jump-resolution-rule
			[
				[ interval 6 ]
				[ resolution 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ do-reach-that-interval-rule
			[
				[ how-many 4 ]
				[ interval 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ do-not-reach-that-interval-rule
			[
				[ how-many 4 ]
				[ interval 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ apply-interval-sum-rule
			[
				[ sum 26 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ apply-interval-global-sum-rule
			[
				[ sum 26 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-complementary-interval-rule
			[
				[ interval 12 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ interval-structure-rule
			[
				[ interval-structure
					[ 2 3 -1 7 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-interval-structure-rule
			[
				[ interval-structure
					[ 2 3 -1 7 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-positive-intervals-rule
			[
				[ number 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-negative-intervals-rule
			[
				[ number 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ pitch-rules
		[ allowed-pitch-rule
			[
				[ pitch
					[ 60 62 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-pitch-rule
			[
				[ pitch
					[ 60 62 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-polarized-pitch-rule
			[
				[ pitch
					[ 60 62 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-pitch-structure-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-pitch-class-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ allowed-pitch-class-sub-list-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-pitch-structure-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-pitch-class-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-allowed-pitch-class-sub-list-rule
			[
				[ pitch
					[ 60 63 67 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ index-pitch-rule
			[
				[ index i1 ]
				[ pitch
					[ 60 62 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-index-pitch-rule
			[
				[ index i1 ]
				[ pitch
					[ 60 62 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ any-note-repeated-rule
			[
				[ times 2 ]
				[ which3 1 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-this-note-rule
			[
				[ note 68 ]
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-this-modulo-rule
			[
				[ note 68 ]
				[ how-many 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-repeated-modulo12-sub-group-rule
			[
				[ sub-group-length 4 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-modulo12-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-modulo12-local-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ mk-profile-pitch-rule
			[
				[ curve-min 60 ]
				[ curve-max 72 ]
				[ steps 10 ]
				[ bpf_profile
					[ ]
				]
				[ approx 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ mk-profile-pitch-modulo-rule
			[
				[ pitches
					[ 60 62 64 65 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ shaping-rules
		[ ascending-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ ascending-without-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ ascending-sub-group-no-repet-rule
			[
				[ nth-? 0 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ ascending-sub-group-with-repet-rule
			[
				[ nth-? 0 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ descending-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ descending-without-repetition-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ descending-sub-group-no-repet-rule
			[
				[ nth-? 0 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ descending-sub-group-with-repet-rule
			[
				[ nth-? 0 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ mk-fix-profile-rule
			[
				[ profile
					[ 60 63 70 74 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ mk-profile-rule
			[
				[ curve-min 60 ]
				[ curve-max 72 ]
				[ steps 10 ]
				[ bpf_profile
					[ ]
				]
				[ decimals 0 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ sub-group-mk-profile-rule
			[
				[ curve-min 60 ]
				[ curve-max 72 ]
				[ nth-? 0 ]
				[ steps 10 ]
				[ bpf_profile
					[ ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ direct-analysis-rule
			[
				[ analysis
					[ 1 -1 0 1 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ energy-profile-rule
			[
				[ energy-profile
					[ 32 22 18 19 40 12 1 249 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ energy-profile-range-rule
			[
				[ energy-profile
					[ 32 22 18 19 40 12 1 249 ]
				]
				[ range 10 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ pattern-rules
		[ ptrn-find-rule
			[
				[ ptrn-length 2 ]
				[ repeat-ptrn 3 ]
				[ which5 1 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ not-ptrn-find-rule
			[
				[ ptrn-length 2 ]
				[ repeat-ptrn 3 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ find-this-ptrn-n-times-rule
			[
				[ pattern
					[ 1 2 3 ]
				]
				[ repeat-ptrn 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-shape-pattern-lcl-repetition-rule
			[
				[ ptrn-length 4 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ more-first-repeated-than-second-rule
			[
				[ element-1
					[ 2 ]
				]
				[ element-2
					[ 3 ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ repeated-pattern-rule
			[
				[ pattern [ 1 1 ] ]
				[ times 3 ]
				[ which_unparen := ]
				[ absolute? :absolute ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ always-more-little-included-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ distance-rules
		[ distance-rule
			[
				[ pattern
					[ 1 2 3 ]
				]
				[ distance 50 ]
				[ which_unparen :< ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ structure-rules
		[ mk-symbol-structure-rule
			[
				[ structure
					[ c i a o ]
				]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ find-apply-global-sum-rule
			[
				[ sum 10 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ find-apply-global-absolute-sum-rule
			[
				[ sum 10 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ find-apply-approx-sum-rule
			[
				[ sum 7 ]
				[ approx 0.200000 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ find-apply-approx-absolute-sum-rule
			[
				[ sum 7 ]
				[ approx 0.200000 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ length-sub-group-applied-sum-rule
			[
				[ length? 1 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ structured-order-sum-rule
			[
				[ candidates
					[ ?1 ?2 ?3 ]
				]
				[ order
					[ 0 1 0 2 2 2 2 0 1 ]
				]
				[ sum 11 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-positive-rule
			[
				[ number 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ count-negative-rule
			[
				[ number 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-consecutive-rests-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ no-consecutive-pulses-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ alternating-positive-negative-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ alternating-+/-first-elmt-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ alternating-+/-last-elmt-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
	]
	[ matrix-rules
		[ mk-latin-matrix-rule
			[
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ chain-common-element-lists-rule
			[
				[ chain-length? 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			]
		]
		[ chain-more-little-included-common-lists-rule
			[
				[ first-n? 2 ]
				[ last-n? 2 ]
				[ mode? :true/false ]
				[ weight 1 ]
			] 
		]
	]